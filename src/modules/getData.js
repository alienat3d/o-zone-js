const getData = () => {
  // Метод fetch создан специально для работы с серверными запросами. Этот метод принимает 1 обязательный аргумент, это URL по которому находятся данные, которые нам необходимо получить. В ответ сервер формирует некий объект и пересылает его нам. Но происходит это не сразу, а время получения зависит от многих факторов: от скорости интернета, о объёма данных, о сложности обработки данных сервером.
  // Метод fetch также является асинхронной операцией. Это значит, что её выполнение займёт какое-то время, которое мы точно не можем знать. Для этого есть спец. метод then, который отрабатывает сразу по получении данных с сервера.
  return (
    fetch(
      'https://o-zone-js-66b71-default-rtdb.europe-west1.firebasedatabase.app/goods.json'
    )
      // И чтобы мы могли работать с инфой в тот момент, когда она точно нами получина, существует метод then. Данный метод получает аргументом callback, а этот callback имеет параметр response (т. е. ответ от сервера). Callback - функция, которую мы передаём как аргумент в другую функцию. В данном случае в метод then мы передаём callback. Когда метод then получит ответ от сервера, то он запустит функцию-callback и передаст её значение, т. е. ответ от сервера в аргумент response.
      .then((response) => {
        // Но изначально ответ получается не в том виде, что нужно и поэтому применеям к нему метод JSON и возращаем его уже переведённым в json-структуру.
        return response.json();
      })
  );
  // Таким образом мы написали функцию, которая может быть вызвана из любого модуля, например из second.js и вернёт определённый ответ сервера, расположенный по конкретному адресу.
};

export default getData;
